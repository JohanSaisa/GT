// <auto-generated />
using System;
using GT.Data.Data.GTAppDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GT.Data.Migrations.GTAppMigrations
{
    [DbContext(typeof(GTAppContext))]
    partial class GTAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CompanyLocation", b =>
                {
                    b.Property<string>("CompaniesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocationsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CompaniesId", "LocationsId");

                    b.HasIndex("LocationsId");

                    b.ToTable("CompanyLocation");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.ExperienceLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExperienceLevels");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.Listing", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EmployerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExperienceLevelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("FTE")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ListingTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SalaryMax")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("ExperienceLevelId");

                    b.HasIndex("LocationId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.ListingInquiry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LinkedInLink")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ListingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MessageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.ToTable("ListingInquiries");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CompanyLocation", b =>
                {
                    b.HasOne("GT.Data.Data.GTAppDb.Entities.Company", null)
                        .WithMany()
                        .HasForeignKey("CompaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GT.Data.Data.GTAppDb.Entities.Location", null)
                        .WithMany()
                        .HasForeignKey("LocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.Listing", b =>
                {
                    b.HasOne("GT.Data.Data.GTAppDb.Entities.Company", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerId");

                    b.HasOne("GT.Data.Data.GTAppDb.Entities.ExperienceLevel", "ExperienceLevel")
                        .WithMany("Listings")
                        .HasForeignKey("ExperienceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GT.Data.Data.GTAppDb.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Employer");

                    b.Navigation("ExperienceLevel");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.ListingInquiry", b =>
                {
                    b.HasOne("GT.Data.Data.GTAppDb.Entities.Listing", "Listing")
                        .WithMany("Inquiries")
                        .HasForeignKey("ListingId");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.ExperienceLevel", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("GT.Data.Data.GTAppDb.Entities.Listing", b =>
                {
                    b.Navigation("Inquiries");
                });
#pragma warning restore 612, 618
        }
    }
}
