@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model List<GT.Core.DTO.Impl.ListingOverviewDTO>
@{
	ViewData["Title"] = "Annonser";
}
<h1>@ViewData["Title"]</h1>

@*TODO: Select which props to display in overview.

	Properties available for Listing search results:

	public string? Id { get; set; }
	public string? ListingTitle { get; set; }
	public string? EmployerName { get; set; }
	public int? SalaryMin { get; set; }
	public int? SalaryMax { get; set; }
	public string? JobTitle { get; set; }
	public string? Location { get; set; }
	public bool? FTE { get; set; }
	public DateTime? CreatedDate { get; set; }
	public string? ExperienceLevel { get; set; }*@
@using (Html.BeginForm("ListingOverview", "Listing", FormMethod.Get))
{
	@await Html.PartialAsync("_ListingFilterPartial",
    new GT.UI.Models.ListingFilterViewModel
    {
      ExperienceLevels = (List<ExperienceLevelItem>)ViewData["ExperienceLevels"]
    })
}

<table>
	<tr>
		<th>
			<h3>Våra aktuella jobbannonser</h3>
		</th>
	</tr>

	@foreach (var item in Model)
	{
		<tr>
			<td>
				<div class="card border-1">
					<h5><a asp-action="GetListing" asp-controller="Listing" asp-route-id="@item.Id" class="card-title stretched-link">@item.JobTitle</a></h5>
					<p class="card-text">@Html.DisplayFor(modelItem => item.ListingTitle)</p>
				</div>
			</td>
			@if (SignInManager.IsSignedIn(User) && User.IsInRole("GTadmin"))
			{
				<td>
					<a asp-action="Delete" asp-controller="Listing" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
				</td>
			}
		</tr>
	}
</table>
<br />
